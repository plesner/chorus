# Copyright 2015 the Neutrino authors (see AUTHORS).
# Licensed under the Apache License, Version 2.0 (see LICENSE).

library_file_names = [
  "chorus.cc",
]

def compile_file(name):
  file = c.get_source_file(name)
  file.add_include(get_dep("tclib").get_child("src", "c"))
  file.add_include(get_dep("plankton").get_child("src", "c"))
  return file.get_object()

# All the objects for the library source files. It might make sense to create
# a real library at some point but for now this'll do.
library = get_group("library")
library.add_dependency(get_dep_external('tclib', 'src', 'c', 'io', 'library'))
library.add_dependency(get_dep_external('tclib', 'src', 'c', 'sync', 'library'))
library.add_dependency(get_dep_external('plankton', 'src', 'c', 'library'))

# Add the source file objects to the library.
for library_file_name in library_file_names:
  library.add_member(compile_file(library_file_name))

main_file_names = [
  "main.cc",
]

chorus = c.get_executable("chorus")
chorus.add_object(library)
for main_file_name in main_file_names:
  chorus.add_object(compile_file(main_file_name))
